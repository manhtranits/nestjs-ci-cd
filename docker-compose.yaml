x-templates:
  api: &api
    image: its-nestjs-api
    build:
      context: .
    logging:
      driver: json-file
      options:
        max-size: '10m'
        max-file: '3'
    restart: always
    env_file: .env

services:
  reverse-proxy:
    image: traefik:v3.4
    container_name: reverse-proxy
    command:
      - --providers.docker
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker.exposedbydefault=false
      - --certificatesresolvers.letsencrypt.acme.email=`${EMAIL}`
      - --certificatesresolvers.letsencrypt.acme.storage=/acme.json
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./acme.json:/acme.json:rw

  api:
    <<: *api
    expose:
      - ${APP_PORT:-3333}
    command: sh -c "node src/main.js"
    container_name: api
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.api.rule=Host(`${DOMAIN}`) && PathPrefix(`/api`)'
      - 'traefik.http.routers.api.entrypoints=websecure'
      - 'traefik.http.routers.api.tls.certresolver=letsencrypt'
      - 'traefik.http.services.api.loadbalancer.server.port=${APP_PORT:-3333}'
      - 'traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api'
      - 'traefik.http.middlewares.api-addprefix.addprefix.prefix=/api/v1'
      - 'traefik.http.routers.api.middlewares=api-stripprefix,api-addprefix'
    networks:
      - its-nestjs

networks:
  its-nestjs:
    driver: bridge
